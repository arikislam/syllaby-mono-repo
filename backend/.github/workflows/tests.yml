name: Laravel API CI

on:
  workflow_dispatch:

  pull_request:
    branches: [ main, 'release/**' ]
    types: [ opened, reopened ]

  push:
    branches: [ main, staging ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    
    if: ${{ !(
        contains(github.event.head_commit.message || '', '[skip ci]') ||
        contains(github.event.pull_request.title || '', '[skip ci]') ||
        contains(github.event.pull_request.body || '', '[skip ci]')
      ) }}

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: syllaby
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3 --user=root
    
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: dom, curl, libxml, mbstring, fileinfo, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, redis
          coverage: none

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      
      - name: Setup environment
        run: cp .env.ci .env

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Clear Application cache
        run: |
          php artisan cache:clear
          php artisan config:clear

      - name: Execute tests via PEST
        run: ./vendor/bin/pest --configuration phpunit.xml tests/
